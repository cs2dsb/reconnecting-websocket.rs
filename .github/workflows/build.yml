name: Build

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pages: write 
      id-token: write 
      packages: write
      attestations: write

    environment:
      name: github-pages
      url: ${{ steps.deploy_pages.outputs.page_url }}

    steps:
      - name: ü™ìFree disk space
        run: |
          # sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
          sudo rm -rf \
            /usr/share/dotnet /usr/local/lib/android /opt/ghc \
            /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
            /usr/lib/jvm || true
          
          sudo apt-get purge aria2 ansible azure-cli shellcheck rpm xorriso zsync \
            esl-erlang firefox gfortran-8 gfortran-9 google-chrome-stable \
            google-cloud-sdk imagemagick libmagickcore-dev libmagickwand-dev \
            libmagic-dev ant ant-optional kubectl mercurial apt-transport-https \
            mono-complete libmysqlclient unixodbc-dev yarn chrpath libssl-dev \
            libxft-dev libfreetype6 libfreetype6-dev libfontconfig1 \
            libfontconfig1-dev snmp pollinate libpq-dev postgresql-client \
            powershell ruby-full sphinxsearch subversion mongodb-org azure-cli \
            microsoft-edge-stable google-cloud-sdk microsoft-edge-stable \
            microsoft-edge-stable '^mysql' '^php' '^dotnet' \
            -y -f || true

          sudo apt-get autoremove -y || true
          sudo apt-get autoclean -y || true

      - name: üîß Setup buildx
        uses: docker/setup-buildx-action@v3

      - name: üîé Get tag 
        id: tag
        uses: dawidd6/action-get-tag@v1
        # Because it can be kicked off manually there may not be a tag
        continue-on-error: true

      - name: üîç Set build suffix 
        run: |
          echo "SUFFIX=$([[ "${{ steps.tag.outputs.tag }}" = "" ]] && echo $GITHUB_SHA || echo ${{ steps.tag.outputs.tag }})" >> $GITHUB_ENV
          DATE=$(date +'%Y-%m-%d_%H%M%S')
          REPO=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}
          
          echo ref_name = ${{  github.ref_name }}
          echo "DATE=$DATE" | tee -a $GITHUB_ENV
          echo "TAG=$([[ "${{ steps.tag.outputs.tag }}" = "" ]] && echo "main_$DATE" || echo "${{ steps.tag.outputs.tag }}")" | tee -a $GITHUB_ENV
          echo "REPO_NAME=$REPO" | tee -a $GITHUB_ENV
          echo "REPO_OWNER=$GITHUB_REPOSITORY_OWNER" | tee -a $GITHUB_ENV
          echo "IMAGE_TAG=${{ env.REGISTRY }}/$GITHUB_REPOSITORY_OWNER/$REPO:$([[ "${{ github.ref }}" == "refs/heads/deploy" ]] && echo "latest" || echo "main")" | tee -a $GITHUB_ENV
          echo "IMAGE_NAME=$REPO" | tee -a $GITHUB_ENV

      - name: üõí Checkout repo
        uses: actions/checkout@master

      - name: üéØ Cache target dir (restore)
        id: cache
        uses: actions/cache@v4
        with:
          key: ${{ env.REPO_NAME }}_target_and_registry_cache-${{ hashFiles('**/Cargo.toml') }}
          path: |
            target
            cargo_registry
          restore-keys: |
            ${{ env.REPO_NAME }}_target_and_registry_cache-
            ${{ env.REPO_NAME }}_target_cache-
          save-always: true

      - name: üèóÔ∏è Build the project in docker
        uses: addnab/docker-run-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image: ghcr.io/cs2dsb/reconnecting-websocket.rs/rust/nightly:latest
          options: |
            -e RUSTUP_PERMIT_COPY_RENAME=false
            -v ${{ github.workspace }}/:/build
            -v ${{ github.workspace }}/cargo_registry:/usr/local/cargo/registry
            -w /build
          run: |
            set -e
            cargo build --release
            ./scripts/integration_tests
            cargo doc \
                --release \
                --all-features \
                --document-private-items
            echo '<meta http-equiv="refresh" content="0;url=reconnecting_websocket/index.html">' \
                | tee target/doc/index.html
            rm target/doc/.lock
      
      - name: üîí Fix the permissions after docker mucked them up
        run: |
          sudo chown -R $USER:$USER "${{ github.workspace }}"

      - name: üóíÔ∏è Setup pages
        id: pages
        uses: actions/configure-pages@v4

      - name: üö† Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/doc

      - name: ‚úÖ Deploy to GitHub Pages
        id: deploy_pages
        uses: actions/deploy-pages@v4